---
layout: getting_started
title: 1 소개 - Introduction
guide: 1
---

# {{ page.title }}

  <div class="toc"></div>

환영합니다！

Welcome!

이번 튜토리얼에서 Elixir를 시작할것입니다. 이번장에서는 Elixir가 잘 설치되고 Elixir 인터랙티브 쉘이 잘 동작하는지 살펴볼것입니다.

In this tutorial we are going to get you started with Elixir. This chapter will focus on ensuring Elixir is installed and that you can sucessfully run Elixir's Interactive Shell, called IEx.

필요한 것은:

  * Erlang - 17.0 이후 버전
  * Elixir - 1.0.0 이후 버전

입니다.

Our requirements are:

  * Erlang - Version 17.0 onwards
  * Elixir - Version 1.0.0 onwards

자, 그럼 시작해 봅시다.

Let's get started!

> 만약이 튜토리얼이나 웹사이트에서 오류를 발견하면 [이슈 트래커에 버그를보고하거나 Pull Request를 보내주세요](https://github.com/elixir-lang/elixir-lang.github.com) . 만약 언어의 버그가 아닌가 생각하신다면, [언어의 이슈 트래커에 알려 주시기 바랍니다](https://github.com/elixir-lang/elixir/issues)

> If you find any errors in the tutorial or on the website, [please report a bug or send a pull request to our issue tracker](https://github.com/elixir-lang/elixir-lang.github.com). If you suspect it is a language bug, [please let us know in the language issue tracker](https://github.com/elixir-lang/elixir/issues).

## 1.1 설치 - Installation

만약 아직 Elixir를 설치하지 않았으면 설치 [installation page](/install.html)를 하십시요. 일단 설치가 되었다면 `elixir -v` 을 실행하여 현재 Elixir 버전을 알 수 있습니다.

If you still haven't installed Elixir, run to our [installation page](/install.html). Once you are done, you can run `elixir -v` to get the current Elixir version.

## 1.2 대화형 모드 - Interactive mode

Elixir를 설치하면 `iex`, `elixir` 그리고 `elixirc` 세 가지를 실행파일들을 가지게 됩니다. 만약 Elixir를 소스에서 컴파일했거나, 패키지 버전을 사용하고 있다면, 그 파일들을 `bin` 디렉토리에서 찾을 수 있습니다.

When you install Elixir, you will have three new executables: `iex`, `elixir` and `elixirc`. If you compiled Elixir from source or are using a packaged version, you can find these inside the `bin` directory.

그럼 `iex` (windows를 사용한다면 `iex.bat` 입니다)를 동작시켜 봅시다. iex는 Intractive Elixir 의미합니다. 대화형 모드에서는 어떤 Elixir 표현식이든 입력가능하며 결과를 얻을 수 있습니다. 기본적인 표현식 몇개로 몸좀 풀어볼까요:

For now, let's start by running `iex` (or `iex.bat` if you are on Windows) which stands for Interactive Elixir. In interactive mode, we can type any Elixir expression and get its result. Let's warm up with some basic expressions:

```text
Interactive Elixir - press Ctrl+C to exit (type h() ENTER for help)

iex> 40 + 2
42
iex> "hello" <> " world"
"hello world"
```

자 이제 준비가 된거 같네요! 다음 장에서는 언어 구조와 기본적인 형태에 더 익숙해 질 수 있도록 대화 형 쉘을 많이 사용할 것입니다.

It seems we are ready to go! We will use the interactive shell quite a lot in the next chapters to get a bit more familiar with the language constructs and basic types, starting in the next chapter.

## 1.3 스크립트 파일 실행 - Running scripts

언어의 기본에 익숙해 진 후에는 아마 간단한 프로그램을 쓰고 싶어 질 것입니다. 파일에 Elixir 코드를 쓰고 `elixir` 에서 수행 할 수 있습니다 :

After getting familiar with the basics of the language you may want to try writing simple programs. This can be accomplished by putting Elixir code into a file and executing it with `elixir`:

```text
$ cat simple.exs
IO.puts "Hello world
from Elixir"

$ elixir simple.exs
Hello world
from Elixir
```

나중에 어떻게 Elixir 코드를 컴파일하거나 ([8장](/getting_started/8.html)에서) 그리고 어떻게 Mix 빌드 도구를 사용하는지를 ([Mix & OTP 가이드](/getting_started/mix_otp/1.html )에서) 배웁니다. 지금은 [2장](/getting_started/2.html)로 가봅시다.

Later on we will learn how to compile Elixir code (in [Chapter 8](/getting_started/8.html)) and how to use the Mix build tool (in the [Mix & OTP guide](/getting_started/mix_otp/1.html)). For now, let's move on to [Chapter 2](/getting_started/2.html).
